{
  "name": "horizon-backend",
  "version": "1.0.0",
  "main": "index.js",
  "type": "module",
  "scripts": {
    "start": "node index.js",
    "dev": "nodemon index.js",
    "db:generate": "drizzle-kit generate",
    "db:migrate": "node scripts/run-migrations.js",
    "db:migrate:kit": "drizzle-kit migrate",
    "db:push": "drizzle-kit push",
    "db:studio": "drizzle-kit studio",
    "db:drop": "drizzle-kit drop",
    "db:check": "drizzle-kit check",
    "db:backup": "node -e \"import('./src/db/rollback.js').then(m => m.backupDatabase('manual'))\"",
    "db:checkpoint": "node src/db/migrations/rollback/rollback-procedures.js checkpoint",
    "db:rollback": "node scripts/rollback-migrations.js",
    "db:status": "node -e \"import('./src/db/migrations/rollback/rollback-procedures.js').then(m => m.getCurrentSchemaVersion().then(console.log))\"",
    "db:validate": "node scripts/validate-schema.js",
    "db:rollback-schema": "node -e \"import('./src/db/rollback.js').then(m => m.rollbackMigration('0000_medical_maddog'))\"",
    "db:test-rollback": "node -e \"import('./src/db/rollback.js').then(m => m.testRollback())\"",
    "test": "NODE_OPTIONS='--experimental-vm-modules' jest",
    "test:watch": "NODE_OPTIONS='--experimental-vm-modules' jest --watch",
    "test:coverage": "NODE_OPTIONS='--experimental-vm-modules' jest --coverage",
    "test:unit": "NODE_OPTIONS='--experimental-vm-modules' jest src/services/__tests__",
    "test:integration": "NODE_OPTIONS='--experimental-vm-modules' jest __tests__/integration",
    "test:performance": "node __tests__/performance/benchmark.js",
    "perf:analytics": "autocannon -c 10 -d 10 http://localhost:4000/api/inventory/analytics",
    "perf:profile": "clinic doctor -- node index.js",
    "perf:benchmark": "node scripts/performance-benchmark.js",
    "validate:legacy": "node scripts/legacy-validation.js",
    "validate:performance": "npm run perf:benchmark && npm run validate:legacy",
    "rollback:emergency": "node scripts/emergency-rollback.js --type full --force",
    "rollback:emergency-db": "node scripts/emergency-rollback.js --type database --force",
    "rollback:emergency-app": "node scripts/emergency-rollback.js --type application --force",
    "rollback:emergency-feature": "node scripts/emergency-rollback.js --type feature --force",
    "rollback:dry-run": "node scripts/emergency-rollback.js --type full --dry-run",
    "rollback:validate": "node scripts/rollback-validator.js",
    "rollback:validate:pre": "node scripts/rollback-validator.js rollback-validation pre",
    "rollback:validate:during": "node scripts/rollback-validator.js rollback-validation during",
    "rollback:validate:post": "node scripts/rollback-validator.js rollback-validation post",
    "health:check": "node -e \"import('./src/utils/health-checks.js').then(m => m.validateSystemHealth().then(console.log))\"",
    "health:check:all": "node scripts/rollback-validator.js health-check all",
    "app:maintenance-mode": "echo 'Maintenance mode toggled'",
    "test:rollback:complete": "npm run test:rollback:database && npm run test:rollback:application && npm run test:rollback:features",
    "test:rollback:database": "npm run db:test-rollback",
    "test:rollback:application": "npm run rollback:dry-run",
    "test:rollback:features": "npm run rollback:validate:pre",
    "test:rollback:readiness": "npm run rollback:validate:pre",
    "test:rollback:drill": "npm run rollback:dry-run && npm run rollback:validate",
    "validate:critical-features": "node scripts/rollback-validator.js feature-validation all",
    "validate:data-consistency": "node scripts/rollback-validator.js data-validation all",
    "security:check": "node -e \"import('./src/config/security.config.js').then(m => m.securityConfig.performSecurityHealthCheck().then(console.log))\"",
    "security:init": "node -e \"import('./src/config/security.config.js').then(m => m.securityConfig.initialize())\"",
    "security:status": "node -e \"import('./src/config/security.config.js').then(m => console.log(JSON.stringify(m.securityConfig.getSecurityStatus(), null, 2)))\"",
    "security:report": "node -e \"import('./src/config/security.config.js').then(m => m.securityConfig.generateSecurityReport().then(r => console.log(JSON.stringify(r, null, 2))))\"",
    "backup:database": "node -e \"import('./src/services/backup-recovery.service.js').then(m => m.backupRecoveryService.performDatabaseBackup())\"",
    "backup:files": "node -e \"import('./src/services/backup-recovery.service.js').then(m => m.backupRecoveryService.performFileBackup())\"",
    "backup:full": "node -e \"import('./src/services/backup-recovery.service.js').then(m => m.backupRecoveryService.performFullBackup())\"",
    "backup:cleanup": "node -e \"import('./src/services/backup-recovery.service.js').then(m => m.backupRecoveryService.cleanupOldBackups())\"",
    "backup:test": "node -e \"import('./src/services/backup-recovery.service.js').then(m => m.backupRecoveryService.testBackupRestore())\"",
    "encryption:test": "node -e \"import('./src/services/encryption.service.js').then(m => m.encryptionService.testEncryption())\"",
    "audit:permissions": "node -e \"import('./src/middleware/rbac.middleware.js').then(m => console.log('RBAC permissions audit - see logs'))\"",
    "monitoring:dashboard": "node -e \"import('./src/services/security-monitoring.service.js').then(m => console.log(JSON.stringify(m.securityMonitoringService.getSecurityDashboard(), null, 2)))\""
  },
  "dependencies": {
    "@neondatabase/serverless": "^1.0.1",
    "@stackframe/stack": "^2.8.21",
    "argon2": "^0.43.1",
    "bcrypt": "^6.0.0",
    "compression": "^1.8.1",
    "cors": "^2.8.5",
    "csv-parse": "^5.5.0",
    "dotenv": "^17.2.0",
    "drizzle-orm": "^0.44.3",
    "express": "^4.18.2",
    "express-rate-limit": "^8.0.1",
    "express-slow-down": "^2.1.0",
    "express-static": "^1.2.6",
    "express-validator": "^7.2.1",
    "fast-xml-parser": "^4.3.0",
    "helmet": "^8.1.0",
    "jsonwebtoken": "^9.0.0",
    "jwks-rsa": "^3.0.0",
    "mathjs": "^14.5.3",
    "multer": "^1.4.5-lts.1",
    "node-cron": "^3.0.3",
    "openai": "^5.10.1",
    "pg": "^8.11.3",
    "rate-limiter-flexible": "^7.1.1",
    "redis": "^5.6.0",
    "response-time": "^2.3.4",
    "ws": "^8.18.3",
    "xlsx": "^0.18.5"
  },
  "devDependencies": {
    "@types/jest": "^30.0.0",
    "drizzle-kit": "^0.31.4",
    "jest": "^30.0.4",
    "nodemon": "^3.1.0"
  }
}
